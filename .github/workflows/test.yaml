#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram>
# Description: Auto compile
#

#
# Fork and compile the latest version yourself using Github Actions
#   1.Into the repository of your own fork
#   2.Into the repository [Settings]
#   3.[Code and automation - Actions] ↓ [General] → [Workflow permissions] ↓  Check the [Read and write permissions] and [Save]
#   4.Let's take [Actions]
#

name: "test passwall Auto compile with OpenWrt SDK"
on:
  repository_dispatch:
  workflow_dispatch:
  

env:
  TZ: Asia/Shanghai
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-18.06

jobs:
  job_build_firmware:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main


    - name: Generate new tag & release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: For Official's LEDE 18.06 LuCI
        tag_name: ${{steps.check_version.outputs.latest_version}}

    - name: Initialization environment and space clean
      run: |
        sudo rm -rf /imagegeneration /opt  /usr/local/aws* /usr/local/julia* /usr/share/swift* /usr/share/sbt* \
        /usr/local/share/chromium* /usr/local/share/powershell* 
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt-get update 
        sudo -E apt-get -y upgrade
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip \
        lib32gcc-s1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev \
        texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler \
        libuv1-dev  zlib1g-dev upx-ucl node-uglify antlr3 gperf wget swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        df -h $PWD
        git clone  -b $REPO_BRANCH $REPO_URL openwrt


    - name: Configure firemware (18.06)
      run: |
        cd sdk
        ./scripts/feeds install 
        echo "CONFIG_TARGET_x86=y" > .config
        echo "CONFIG_TARGET_x86_generic=y" >> .config
        echo "CONFIG_TARGET_x86_generic_Generic=y" >> .config
        echo "CONFIG_TARGET_KERNEL_PARTSIZE=32" >> .config
        echo "CONFIG_TARGET_ROOTFS_PARTSIZE=500" >> .config
        echo "CONFIG_LUCI_LANG_zh_Hans=y" >> .config
        make defconfig

    - name: Compile firemware (18.06)
      id: compile
      run: |
        cd sdk
        echo "make firmware -j$(nproc)"
        make -j$(nproc)              
        tree
        echo "status=success" >> $GITHUB_OUTPUT
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV        


    - name: Upload firemware (18.06) ipks to release
      uses: softprops/action-gh-release@v1
      if: steps.compile.outputs.status == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{needs.job_check.outputs.latest_version}}
        files: ${{ env.FIRMWARE }}/base/luci*.ipk