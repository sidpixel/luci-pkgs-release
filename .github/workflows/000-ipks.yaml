#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram>
# Description: Auto compile
#

#
# Fork and compile the latest version yourself using Github Actions
#   1.Into the repository of your own fork
#   2.Into the repository [Settings]
#   3.[Code and automation - Actions] ↓ [General] → [Workflow permissions] ↓  Check the [Read and write permissions] and [Save]
#   4.Let's take [Actions]
#

name: "8632 and 7621 ipks  Auto compile with OpenWrt SDK 1806"
on:
  repository_dispatch:
  workflow_dispatch:
 

env:
  TZ: Asia/Shanghai
  ARCH: 8632
  GITHUBREPO: xiaorouji/openwrt-passwall
  PKGNAME: luci-app-passwall


jobs:
  job_check:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Clean space
        run: |
          echo "clean  space"
          sudo rm -rf /imagegeneration /opt  /usr/local/aws* /usr/local/julia* /usr/share/swift* /usr/share/sbt* /usr/local/share/chromium* /usr/local/share/powershell* 
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          
      - name: Install packages
        run: |
          echo "Install packages"
          sudo -E apt-get -qq install  build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget


      - name: Initialization environment
        #if: steps.cache-sdk.outputs.cache-hit != 'true'
        env:
          url_sdk: https://mirror-03.infra.openwrt.org/releases/18.06.9/targets/x86/generic/openwrt-sdk-18.06.9-x86-generic_gcc-7.3.0_musl.Linux-x86_64.tar.xz
        run: |
          wget ${{ env.url_sdk }}
          file_name=$(echo ${{env.url_sdk}} | awk -F/ '{print $NF}')
          mkdir sdk && tar -xJf $file_name -C ./sdk --strip-components=1
          cd sdk  
          git clone  https://github.com/${{ env.GITHUBREPO }}.git package/downloads/${{ env.PKGNAME }}
          git clone  https://github.com/xiaorouji/openwrt-passwall-packages.git  package/passwall-deps
          git clone  https://github.com/vernesong/OpenClash.git  package/OpenClash
          ./scripts/feeds update -a
          echo "CONFIG_PACKAGE_${{ env.PKGNAME }}=m" > .config
          ./scripts/feeds install -d n ${{ env.PKGNAME }}
          make download -j8

      - name: Configure package (18.06)
        run: |
          cd sdk
          ./scripts/feeds install ${{ env.PKGNAME }}
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_LUCI_LANG_zh_Hans=y" >> .config
          echo "CONFIG_PACKAGE_${{ env.PKGNAME }}=m" >> .config
          make defconfig

      - name: Compile package (18.06)
        id: compile
        run: |
          cd sdk
          echo "make package/${{ env.PKGNAME }}/{clean,compile} -j$(nproc)"
          make package/${{ env.PKGNAME }}/{clean,compile} -j$(nproc)
          mv bin/packages/i386_pentium4/base/ ../
          rm .config .config.old
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload package (18.06) ipks to release
        uses: softprops/action-gh-release@v1
        if: steps.compile.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.job_check.outputs.pkg_version}}
          files: ${{ env.FIRMWARE }}/base/.*.ipk
