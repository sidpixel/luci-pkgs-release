#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram>
# Description: Auto compile
#

#
# Fork and compile the latest version yourself using Github Actions
#   1.Into the repository of your own fork
#   2.Into the repository [Settings]
#   3.[Code and automation - Actions] ↓ [General] → [Workflow permissions] ↓  Check the [Read and write permissions] and [Save]
#   4.Let's take [Actions]
#

name: " firmwall Auto compile with OpenWrt SDK"
on:
  repository_dispatch:
  workflow_dispatch:
  

env:
  TZ: Asia/Shanghai
  ARCH: 8632
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-18.06

jobs:
  job_build_firmware:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main



    - name: Initialization environment and space clean
      run: |
        sudo rm -rf /imagegeneration /opt  /usr/local/aws* /usr/local/julia* /usr/share/swift* /usr/share/sbt* \
        /usr/local/share/chromium* /usr/local/share/powershell* 
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        #sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt-get update 
        #sudo -E apt-get -y upgrade
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip \
        lib32gcc-s1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev \
        texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler \
        libuv1-dev  zlib1g-dev upx-ucl node-uglify antlr3 gperf wget swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        df -h $PWD
        git clone  -b $REPO_BRANCH $REPO_URL openwrt


    - name: Configure feeds.conf
      run: |
        cd openwrt
        cat  << EOF > feeds.conf 
        src-git base https://github.com/openwrt/openwrt.git;openwrt-18.06
        src-git-full packages https://github.com/openwrt/packages.git;openwrt-18.06
        src-git-full luci https://git.openwrt.org/project/luci.git;openwrt-18.06
        src-git-full routing https://git.openwrt.org/feed/routing.git;openwrt-18.06   
        EOF

        git clone https://github.com/destan19/OpenAppFilter.git package/OpenAppFilter
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/lean/luci-theme-argon
        git clone -b v0.38.10-beta  https://github.com/vernesong/OpenClash.git package/OpenClash
        ./scripts/feeds update -a        
        ./scripts/feeds install 
    - name: Configure .config.conf
      run: |
        cd openwrt
        cat << EOF > .config 
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_generic=y
        CONFIG_TARGET_x86_generic_Generic=y
        CONFIG_TARGET_KERNEL_PARTSIZE=32
        CONFIG_TARGET_ROOTFS_PARTSIZE=500
        CONFIG_PACKAGE_luci-app-argon-config=y
        CONFIG_PACKAGE_luci-theme-argon=y
        CONFIG_PACKAGE_luci-theme-argon=y
        CONFIG_PACKAGE_luci-app-adblock=y
        CONFIG_PACKAGE_luci-app-hd-idle=y
        CONFIG_PACKAGE_luci-app-minidlna=y
        CONFIG_PACKAGE_luci-app-samba=y
        CONFIG_PACKAGE_luci-app-shairplay=y
        CONFIG_PACKAGE_luci-app-upnp=y
        CONFIG_PACKAGE_luci-ssl-openssl=y
        CONFIG_PACKAGE_luci-app-wireguard=y
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_uci-base=y
        CONFIG_PACKAGE_luci-compat=y
        EOF

        make defconfig      

    - name: Compile firemware (18.06)
      id: compile
      run: |
        cd openwrt
        echo "make firmware -j$(nproc)"
        make -j$(nproc)  || make -j1 V=s        
        tree
        echo "status=success" >> $GITHUB_OUTPUT
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV        

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-x86-32
        path: openwrt/bin/targets
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: steps.compile.outputs.status == 'success'
      with:
        tag_name: x86-${{ env.REPO_BRANCH }}
        files: |
          openwrt/bin/targets/x86/generic/openwrt-x86-generic-combined-ext4.img.gz
          openwrt/bin/targets/x86/generic/openwrt-x86-generic-combined-squashfs.img.gz
          openwrt/bin/targets/x86/generic/openwrt-x86-generic-generic.manifest
